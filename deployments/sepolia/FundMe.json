{
  "address": "0x11421E37F65A24d1ed8cCaF025cd2d741adAC916",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumUSd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withDraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb746aee4a9add83dabd969d9d09146081944f186e157ec98ab7dca07ffa17a5f",
  "receipt": {
    "to": null,
    "from": "0x93F53D1c6426e7885f1f8A88eD928b72966443bC",
    "contractAddress": "0x11421E37F65A24d1ed8cCaF025cd2d741adAC916",
    "transactionIndex": 109,
    "gasUsed": "789628",
    "logsBloom": "0x
    "blockHash": "0xd48cd145e5b5c70d55ecd0e54f1a7a6b3be1ec8fd8cbf3689e350acd1477cd54",
    "transactionHash": "0xb746aee4a9add83dabd969d9d09146081944f186e157ec98ab7dca07ffa17a5f",
    "logs": [],
    "blockNumber": 5165651,
    "cumulativeGasUsed": "16379310",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "e9bdd345fa0d4064383d87fb8b3f74d4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumUSd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withDraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n//Custom Error \\nerror NotOwner();\\n\\ncontract FundMe{\\n\\n    using PriceConverter for  uint256 ;\\n\\n   \\n    uint256 public  minimumUSd =50 * 1e18;  \\n    address[] public  funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    AggregatorV3Interface public priceFeed;\\n    \\n\\n    address public owner;\\n    \\n    constructor(address priceFeedAddress){\\n       owner =msg.sender;\\n       priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n\\n    function fund() public payable  {\\n        \\n           require(msg.value.getCoversionRate(priceFeed) >= minimumUSd, \\\"Didn't send enough .\\\");\\n        // require(getCoversionRate(msg.value) >= minimumUSd, \\\"Diddnt send enough .\\\");\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender]=msg.value;\\n        //  return (msg.value);\\n\\n    }\\n     \\n     function withDraw() public onlyOwner {\\n        // require(msg.sender == owner, \\\"Sender is not owner .\\\");\\n        // For loop .\\n        for(uint256 fundersIndex=0; fundersIndex < funders.length; fundersIndex++ ){\\n            address funder = funders[fundersIndex];\\n            addressToAmountFunded[funder] = 0;\\n\\n        }\\n\\n        // reset the Array.\\n        // funders = new address[](0);\\n\\n        // // ways to transfer eth from contract .\\n\\n        // //transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // //send\\n        // bool onSuccess = payable(msg.sender).send(address(this).balance);\\n        // //call\\n\\n        (bool onSuccess,)= payable(msg.sender).call{ value: address(this).balance }(\\\"\\\");\\n        require(onSuccess,\\\"WithDraw is failed .\\\");\\n\\n     }\\n\\n\\n     modifier onlyOwner {\\n        // require(msg.sender == owner, \\\"Sender is not owner !.\\\");\\n        if(msg.sender != owner){\\n            revert NotOwner(); \\n        }\\n        _;\\n     }\\n\\n     \\n\\n\\n     receive() external payable {\\n\\n        fund();\\n      }\\n\\n      fallback() external payable { \\n        fund();\\n       }\\n\\n    \\n\\n    // function withdraw(){} \\n}\",\"keccak256\":\"0x83898ee5c0e0877ee7553f99bb3b3edfbe0aaf7eb711041fdeb70de31ca32d7a\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n\\r\\n    function getPrice(AggregatorV3Interface priceFeed)internal  view returns (uint256) {\\r\\n        //  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\\r\\n          (,int answer ,  ,  ,  )=priceFeed.latestRoundData();\\r\\n\\r\\n          return  uint256(answer * 1e10);\\r\\n\\r\\n    }\\r\\n\\r\\n    function getCoversionRate(uint256 ethAmount,AggregatorV3Interface priceFeed) internal  view returns (uint256)  {\\r\\n   \\r\\n        uint256  etherPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountUSD =(etherPrice * ethAmount) / 1e18;\\r\\n\\r\\n        return ethAmountUSD;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xc98d354e0341bf2727d022cc4ef52a191324ca6231882f3ca1faa6b767d71725\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610d78380380610d78833981810160405281019061003f919061012a565b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610157565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f7826100cc565b9050919050565b610107816100ec565b811461011257600080fd5b50565b600081519050610124816100fe565b92915050565b6000602082840312156101405761013f6100c7565b5b600061014e84828501610115565b91505092915050565b610c12806101666000396000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063f2ab18951461017e57610083565b80630fdb1c101461008d5780633e47d6f3146100a4578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102cb565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610687565b6104ae565b6040516100d891906106cd565b60405180910390f35b3480156100ed57600080fd5b506100f66104c6565b6040516101039190610747565b60405180910390f35b34801561011857600080fd5b506101216104ec565b60405161012e9190610771565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906107b8565b610512565b6040516101759190610771565b60405180910390f35b34801561018a57600080fd5b50610193610551565b6040516101a091906106cd565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461055790919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610842565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610352576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103fe5760006001828154811061037857610377610862565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f6906108c0565b915050610355565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042590610939565b60006040518083038185875af1925050503d8060008114610462576040519150601f19603f3d011682016040523d82523d6000602084013e610467565b606091505b50509050806104ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a29061099a565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061052257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60008061056383610593565b90506000670de0b6b3a7640000858361057c91906109ba565b6105869190610a2b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106059190610ae9565b5050509150506402540be4008161061c9190610b64565b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065482610629565b9050919050565b61066481610649565b811461066f57600080fd5b50565b6000813590506106818161065b565b92915050565b60006020828403121561069d5761069c610624565b5b60006106ab84828501610672565b91505092915050565b6000819050919050565b6106c7816106b4565b82525050565b60006020820190506106e260008301846106be565b92915050565b6000819050919050565b600061070d61070861070384610629565b6106e8565b610629565b9050919050565b600061071f826106f2565b9050919050565b600061073182610714565b9050919050565b61074181610726565b82525050565b600060208201905061075c6000830184610738565b92915050565b61076b81610649565b82525050565b60006020820190506107866000830184610762565b92915050565b610795816106b4565b81146107a057600080fd5b50565b6000813590506107b28161078c565b92915050565b6000602082840312156107ce576107cd610624565b5b60006107dc848285016107a3565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f756768202e000000000000000000000000600082015250565b600061082c6014836107e5565b9150610837826107f6565b602082019050919050565b6000602082019050818103600083015261085b8161081f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108cb826106b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108fd576108fc610891565b5b600182019050919050565b600081905092915050565b50565b6000610923600083610908565b915061092e82610913565b600082019050919050565b600061094482610916565b9150819050919050565b7f5769746844726177206973206661696c6564202e000000000000000000000000600082015250565b60006109846014836107e5565b915061098f8261094e565b602082019050919050565b600060208201905081810360008301526109b381610977565b9050919050565b60006109c5826106b4565b91506109d0836106b4565b92508282026109de816106b4565b915082820484148315176109f5576109f4610891565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a36826106b4565b9150610a41836106b4565b925082610a5157610a506109fc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a7b81610a5c565b8114610a8657600080fd5b50565b600081519050610a9881610a72565b92915050565b6000819050919050565b610ab181610a9e565b8114610abc57600080fd5b50565b600081519050610ace81610aa8565b92915050565b600081519050610ae38161078c565b92915050565b600080600080600060a08688031215610b0557610b04610624565b5b6000610b1388828901610a89565b9550506020610b2488828901610abf565b9450506040610b3588828901610ad4565b9350506060610b4688828901610ad4565b9250506080610b5788828901610a89565b9150509295509295909350565b6000610b6f82610a9e565b9150610b7a83610a9e565b9250828202610b8881610a9e565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610bc057610bbf610891565b5b8282058414831517610bd557610bd4610891565b5b509291505056fea264697066735822122095a5bff3a38087f952c7950373bd8b976cca2d5464540e304c6f2652412d9f6764736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010c578063b60d428814610137578063dc0d3dff14610141578063f2ab18951461017e57610083565b80630fdb1c101461008d5780633e47d6f3146100a4578063741bef1a146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102cb565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610687565b6104ae565b6040516100d891906106cd565b60405180910390f35b3480156100ed57600080fd5b506100f66104c6565b6040516101039190610747565b60405180910390f35b34801561011857600080fd5b506101216104ec565b60405161012e9190610771565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906107b8565b610512565b6040516101759190610771565b60405180910390f35b34801561018a57600080fd5b50610193610551565b6040516101a091906106cd565b60405180910390f35b6000546101e1600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461055790919063ffffffff16565b1015610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990610842565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610352576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103fe5760006001828154811061037857610377610862565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806103f6906108c0565b915050610355565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161042590610939565b60006040518083038185875af1925050503d8060008114610462576040519150601f19603f3d011682016040523d82523d6000602084013e610467565b606091505b50509050806104ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a29061099a565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001818154811061052257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60008061056383610593565b90506000670de0b6b3a7640000858361057c91906109ba565b6105869190610a2b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106059190610ae9565b5050509150506402540be4008161061c9190610b64565b915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061065482610629565b9050919050565b61066481610649565b811461066f57600080fd5b50565b6000813590506106818161065b565b92915050565b60006020828403121561069d5761069c610624565b5b60006106ab84828501610672565b91505092915050565b6000819050919050565b6106c7816106b4565b82525050565b60006020820190506106e260008301846106be565b92915050565b6000819050919050565b600061070d61070861070384610629565b6106e8565b610629565b9050919050565b600061071f826106f2565b9050919050565b600061073182610714565b9050919050565b61074181610726565b82525050565b600060208201905061075c6000830184610738565b92915050565b61076b81610649565b82525050565b60006020820190506107866000830184610762565b92915050565b610795816106b4565b81146107a057600080fd5b50565b6000813590506107b28161078c565b92915050565b6000602082840312156107ce576107cd610624565b5b60006107dc848285016107a3565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f756768202e000000000000000000000000600082015250565b600061082c6014836107e5565b9150610837826107f6565b602082019050919050565b6000602082019050818103600083015261085b8161081f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108cb826106b4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108fd576108fc610891565b5b600182019050919050565b600081905092915050565b50565b6000610923600083610908565b915061092e82610913565b600082019050919050565b600061094482610916565b9150819050919050565b7f5769746844726177206973206661696c6564202e000000000000000000000000600082015250565b60006109846014836107e5565b915061098f8261094e565b602082019050919050565b600060208201905081810360008301526109b381610977565b9050919050565b60006109c5826106b4565b91506109d0836106b4565b92508282026109de816106b4565b915082820484148315176109f5576109f4610891565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a36826106b4565b9150610a41836106b4565b925082610a5157610a506109fc565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610a7b81610a5c565b8114610a8657600080fd5b50565b600081519050610a9881610a72565b92915050565b6000819050919050565b610ab181610a9e565b8114610abc57600080fd5b50565b600081519050610ace81610aa8565b92915050565b600081519050610ae38161078c565b92915050565b600080600080600060a08688031215610b0557610b04610624565b5b6000610b1388828901610a89565b9550506020610b2488828901610abf565b9450506040610b3588828901610ad4565b9350506060610b4688828901610ad4565b9250506080610b5788828901610a89565b9150509295509295909350565b6000610b6f82610a9e565b9150610b7a83610a9e565b9250828202610b8881610a9e565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610bc057610bbf610891565b5b8282058414831517610bd557610bd4610891565b5b509291505056fea264697066735822122095a5bff3a38087f952c7950373bd8b976cca2d5464540e304c6f2652412d9f6764736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "minimumUSd",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "owner",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}